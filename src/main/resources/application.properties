########## GENERAL ##########

spring.application.name=${OUTBOX_TRANSFORMER_KAFKA_APP_ID}


########## KAFKA ##########

spring.kafka.streams.cleanup.on-startup=false

spring.kafka.streams.cleanup.on-shutdown=false

spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde

spring.kafka.streams.properties.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndFailExceptionHandler

spring.kafka.streams.properties.default.production.exception.handler=org.apache.kafka.streams.errors.DefaultProductionExceptionHandler

# This is most important when you have time-based operations, which is not the case in that application.
# Because that, we have opted to use only current time in milliseconds from the system clock instead
# use timestamps in messages.
spring.kafka.streams.properties.default.timestamp.extractor=org.apache.kafka.streams.processor.WallclockTimestampExtractor

spring.kafka.streams.bootstrap-servers=${OUTBOX_TRANSFORMER_KAFKA_BOOTSTRAP_SERVERS}

# In a production enviroment, must be the same value in all instances of that application/consumer
# For example, in Kubernetes, could be the name of Deployment
spring.kafka.streams.application-id=${OUTBOX_TRANSFORMER_KAFKA_APP_ID}

# In a production enviroment, must have different value for each instance of that application/consumer.
# For example, in Kubernetes, could be the name of pod.
spring.kafka.streams.client-id=${OUTBOX_TRANSFORMER_KAFKA_CLIENT_ID}

spring.kafka.streams.replication-factor=${OUTBOX_TRANSFORMER_KAFKA_STREAMS_REPLICATION_FACTOR}

# Relates to outbox.transformer.kafka.consumer.topic.pattern
# Time to refresh metadata and discover new topics that match the topic pattern
spring.kafka.streams.properties.main.consumer.metadata.max.age.ms=${OUTBOX_TRANSFORMER_KAFKA_CONSUMER_METADATA_MAX_AGE_MS}

spring.kafka.streams.properties.num.stream.threads=${OUTBOX_TRANSFORMER_KAFKA_NUM_STREAMS_THREAD}

outbox.transformer.kafka.consumer.topic.pattern=${OUTBOX_TRANSFORMER_KAFKA_CONSUMER_TOPIC_PATTERN}

outbox.transformer.kafka.streams.log.sysout=${OUTBOX_TRANSFORMER_KAFKA_STREAMS_LOG_SYSOUT}
